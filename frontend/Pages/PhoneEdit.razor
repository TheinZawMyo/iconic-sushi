@page "/phone/{id:int}/edit"
@inject IToastService toastService
@inject PhoneService phoneService

<h1 class="text-center">Update Mobile Information</h1>

<div class="container d-flex justify-content-center align-items-center">
    <div class="card w-50 p-3">
        @if(phone == null) {
            <p>Loading...</p>
        }else {

            <EditForm Model="@phone" OnValidSubmit="@HandleValidSubmit" >
                @* <ValidationSummary /> *@
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label for="model">Model:</label>
                    <InputText id="model" @bind-Value="@phone.Model" class="form-control" placeholder="Enter model name"/>
                    <ValidationMessage For="@(() => phone.Model)" />
                </div>
                <div class="form-group">
                    <label for="my-dropdown">Select a Brand:</label>
                    <InputSelect id="my-dropdown" @bind-Value="@phone.CompanyId" class="form-select">
                        <option value="1">Apple</option>
                        <option value="2">Samsung</option>
                        <option value="3">Xiaomi</option>
                        <option value="4">Sony</option>
                        <option value="5">Oppo</option>
                        <option value="6">Oneplus</option>
                    </InputSelect>
                    <ValidationMessage For="@(() => phone.CompanyId)" />
                </div>
                <div class="form-group">
                    <label for="qty">Quantity:</label>
                    <InputNumber id="qty" @bind-Value="@phone.Quantity" class="form-control" min="0" placeholder="Enter device qty"/>
                    <ValidationMessage For="@(() => phone.Quantity)" />
                </div>
                <div class="form-group">
                    <label for="price">Price Per Item: ($)</label>
                    <InputNumber id="price" @bind-Value="@phone.PricePerItem" class="form-control" min="1" placeholder="Enter price per item"/>
                    <ValidationMessage For="@(() => phone.PricePerItem)" />
                </div>
                <div class="form-group">
                    <label for="specs">Specifications:</label>
                    <InputTextArea id="specs" @bind-Value="@phone.Specs" class="form-control" placeholder="Enter specifications"/>
                    <ValidationMessage For="@(() => phone.Specs)" />
                </div>
                <br>
                <div class="form-group d-flex justify-content-around">
                    <button type="submit" class="btn btn-primary" style="width: 49%">Save</button>
                    <a href="/" class="btn btn-light" style="width: 49%">Cancel</a>
                </div>
            </EditForm>
        }

    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Phone? phone;

    protected override async Task OnInitializedAsync()
    {
        phone = await phoneService.GetPhoneById(Id);

    }

    private async Task HandleValidSubmit()
    {
        await phoneService.UpdatePhoneById(Id, phone);
        toastService.ShowSuccess("Phone Information was updated successfully!");
        NavigationManager.NavigateTo("/");
    }
}

